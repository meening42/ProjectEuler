# Problem 12

## The sequence of triangle numbers is generated by adding
## the natural numbers. So the 7th triangle number
## would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
##
## 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
##
## Let us list the factors of the first seven triangle numbers:
##
##  1: 1
##  3: 1,3
##  6: 1,2,3,6
## 10: 1,2,5,10
## 15: 1,3,5,15
## 21: 1,3,7,21
## 28: 1,2,4,7,14,28
## We can see that 28 is the first triangle number to have over five divisors.
## 
## What is the value of the first triangle number to have over five hundred divisors

import math

def numOfDiv(num):
    divisors = 0
    maxn = int(math.sqrt(num))
    for i in range(1,maxn+1):
        if num%i ==0:
            divisors = divisors +2
    if math.sqrt(num)-maxn == 0:        
        divisors = divisors +1
    return divisors    

triangSeq = [1]
n = 0
k = 1

while numOfDiv(triangSeq[n])<500:
    k=k+1
    triangSeq.append(triangSeq[n]+k)
    n=n+1

print(triangSeq[n-1])
print(triangSeq[n])
